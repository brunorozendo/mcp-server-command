plugins {
    id 'java'
    id 'application'
    id 'groovy'
    id 'jacoco' // For code coverage
}

group = 'com.brunorozendo'
version = '0.5.0'

java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.modelcontextprotocol.sdk:mcp:0.10.0'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'org.slf4j:slf4j-simple:2.0.9'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.3'

    // Spock and Groovy for testing
    testImplementation platform('org.spockframework:spock-bom:2.4-M6-groovy-4.0')
    testImplementation 'org.spockframework:spock-core'

    // Spock reports
    testImplementation "com.athaydes:spock-reports:2.5.1-groovy-4.0"
}

application {
    mainClass = 'com.brunorozendo.mcp.server.command.McpCommandServer'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Create a fat jar for easier distribution
jar {
    manifest {
        attributes(
            'Main-Class': 'com.brunorozendo.mcp.server.command.McpCommandServer'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}


test{
    useJUnitPlatform()
    testLogging {
        //events "FAILED","PASSED","SKIPPED","STANDARD_ERROR","STANDARD_OUT","STARTED"
        events "FAILED","PASSED","SKIPPED"
    }
    finalizedBy jacocoTestReport // Generate report after tests run
}